<?phpclass News_m extends CI_Model{    var $column_order_groups = array(null, 'tbl_news.image', 'tbl_news.name_ar', 'tbl_news.name_en', 'tbl_news.link'); //set column field database for datatable orderable    var $column_search_groups = array('tbl_news.image', 'tbl_news.name_ar', 'tbl_news.name_en', 'tbl_news.link'); //set column field database for datatable searchable    var $order_groups = array('tbl_news.id' => 'desc');    private function _get_datatables_query()    {        $this->db->select('tbl_news.*');        $this->db->from('tbl_news ');        $i = 0;        foreach ($this->column_search_groups as $item) {            if (@$_POST['search']['value']) {                if ($i === 0) { // first loop                    $this->db->group_start();                    $this->db->like($item, $_POST['search']['value']);                } else {                    $this->db->or_like($item, $_POST['search']['value']);                }                if (count($this->column_search_groups) - 1 == $i)                    $this->db->group_end();            }            $i++;        }        if (isset($_POST['order'])) {            $this->db->order_by($this->column_order_groups [$_POST['order']['0']['column']], $_POST['order']['0']['dir']);        } else if (isset($this->order_groups)) {            $order = $this->order_groups;            $this->db->order_by(key($order), $order[key($order)]);        }    }    function get_datatables()    {        $this->_get_datatables_query();        if (@$_POST['length'] != -1)            $this->db->limit(@$_POST['length'], @$_POST['start']);        $query = $this->db->get();        return $query->result();    }    function count_filtered()    {        $this->_get_datatables_query();        $query = $this->db->get();        return $query->num_rows();    }    function count_all()    {        $this->db->select('tbl_news.*');        $this->db->from('tbl_news ');        return $this->db->count_all_results();    }    /*************************************************************************/    public function get($id = null)    {        $this->db->select('tbl_news.* , users.name as publisher_name ');        $this->db->from('tbl_news');        $this->db->join('users', 'users.user_id = tbl_news.user_id');        if ($id != null) {            $this->db->where('id', $id);        }        $this->db->order_by('id', 'desc');        $query = $this->db->get();        return $query;    }    public function add($post, $image = '', $images = array())    {        $params = [            'user_id' => $this->session->userdata('userid'),            'image' => $image,            'name_ar' => $post['name_ar'],            'name_en' => $post['name_en'],            'name_ru' => $post['name_ru'],            'description_ar' => $post['description_ar'],            'description_en' => $post['description_en'],            'description_ru' => $post['description_ru'],            'create_at' => date('Y-m-d H:i:s')        ];        $this->db->insert('tbl_news', $params);        $insert_id = $this->db->insert_id();        if (!empty($images) && (count($images) > 0)) {            $this->db->where('news_id_fk', $insert_id)->delete('tbl_news_images');            foreach ($images as $key => $one_image) {                $image_data['news_id_fk'] = $insert_id;                $image_data['image'] = $one_image;                $this->db->insert('tbl_news_images', $image_data);            }        }    }    function get_images($news_id_fk)    {        return $this->db->where('news_id_fk', $news_id_fk)->get('tbl_news_images')->result();    }    public function edit($post, $image = '', $images = array())    {        $params = [            'name_ar' => $post['name_ar'],            'name_en' => $post['name_en'],            'name_ru' => $post['name_ru'],            'description_ar' => $post['description_ar'],            'description_en' => $post['description_en'],            'description_ru' => $post['description_ru'],            'updated' => date('Y-m-d H:i:s')        ];        if (!empty($image)) {            $params['image'] = $image;        }        $this->db->where('id', $post['id']);        $this->db->update('tbl_news', $params);        if (!empty($images) && (count($images) > 1)) {            $this->db->where('news_id_fk', $post['id'])->delete('tbl_news_images');            foreach ($images as $key => $one_image) {                $image_data['news_id_fk'] = $post['id'];                $image_data['image'] = $one_image;                $this->db->insert('tbl_news_images', $image_data);            }        }    }    public function delete($id)    {        $item = $this->get($id)->row();        if ($item->image != null) {            $target_file = './uploads/news/' . $item->image;            unlink($target_file);        }        $this->db->where('id', $id)->delete('tbl_news');        $this->db->where('blog_id', $id)->delete('blog_comment');        $this->db->where('news_id_fk', $id)->delete('tbl_news_images');    }    public function delete_upload($id)    {        $item = $this->db->where('id', $id)->get('tbl_news_images')->row();        if ($item->image != null) {            $target_file = './uploads/news/' . $item->img;            unlink($target_file);        }        $this->db->where('id', $id)->delete('tbl_news_images');    }    /*-------------------------web site----------------------------*/    function get_all_blogs($where_arr = null, $limit = null, $start = 0)    {        $this->db->select('tbl_news.*')->from('tbl_news');        if (!empty($where_arr)) {            $this->db->where($where_arr);        }        if (!empty($limit)) {            $this->db->limit($limit, $start);        }        $events = $this->db->order_by('id', 'DESC')->get()->result();        /*        print_r($this->db->last_query());*/        if (!empty($events)) {            foreach ($events as $key => $event) {                $events[$key]->imgs = get_by('tbl_news_images', array('news_id_fk' => $event->id), 1);//                $events[$key]->comments = count_by('blog_comment', array('blog_id' => $event->id));            }        }        return $events;    }    function get_one_blog($where_arr)    {        $this->db->select('tbl_news.*')->from('tbl_news');        if (!empty($where_arr)) {            $this->db->where($where_arr);        }        $event = $this->db->get()->row();        if (!empty($event)) {            $event->imgs = get_by('tbl_news_images', array('news_id_fk' => $event->id));            $event->comments = get_by('blog_comment', array('blog_id' => $event->id));        }        return $event;    }    public function get_count($where_arr)    {        if (!empty($where_arr)) {            $this->db->where($where_arr);        }        return $this->db->get("tbl_news")->num_rows();    }    function add_comment()    {        $data = $this->input->post('data');        /*		$data = $_POST;*/        /*echo "<pre>";        print_r($data);        die;*/        $this->db->insert('blog_comment', $data);    }    function delete_comment($table, $where_arr = false)    {        if (!empty($where_arr)) {            $this->db->where($where_arr);        }        $this->db->delete($table);    }}?>