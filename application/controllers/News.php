<?phpdefined('BASEPATH') or exit('No direct script access allowed');class News extends CI_Controller{    function __construct()    {        parent::__construct();        check_not_login();        $this->load->model(['News_m']);        if ($this->session->userdata('site_lang')) {            switch ($_SESSION['site_lang']) {                case 'arabic':                    $this->config->set_item('language', 'arabic');                    break;                case 'english':                    $this->config->set_item('language', 'english');                    break;                case 'russian':                    $this->config->set_item('language', 'russian');                    break;                default:                    $this->config->set_item('language', 'english');                    break;            }        }    }    public function index()    {        //$data['all'] = $this->News_m->get();        $data['title'] = translate('blogs');        $this->template->load('template', 'news_v/data', $data);    }    function get_ajax()    {        $list = $this->News_m->get_datatables();        $data = array();        $no = @$_POST['start'];        foreach ($list as $item) {            $no++;            $row = array();            if (!empty($item->image) && (file_exists('uploads/news/' . $item->image))) {                $image = base_url() . 'uploads/news/' . $item->image;            } else {                $image = base_url() . 'uploads/defult_image.jpg';            }            $row[] = $no . ".";            $row[] = '<img src="' . $image . '"  height="100px" width="150px" alt="" class="direct-chat-img" />';            $row[] = $item->name_ar;            $row[] = $item->name_en;            $row[] = '<a href="' . base_url() . 'News/comments/' . base64_encode($item->id) . '"												class="btn btn-info  btn-outline">													<i class="far fa-comments"></i>												</a>';//            $row[] = $item->description;            $row[] = '            <div class="btn-block  btn-group-sm">                                    <a href="#modal_details" data-toggle="modal" title="'.translate('Details').'"                         onclick="get_load_details(' . $item->id . ')" class="btn btn-warning btn-sm">                          <i class="fa fa-eye" style="color: white;"></i></a>                                         <a href="' . base_url() . 'News/edit/' . $item->id . '" title="'.translate('Update').'"   class="btn btn-info btn-sm">                                            <i class="fa fa-pencil-alt" > </i></a>            <a href="#" onclick=\'Swal.fire({                                            title: "' . translate('Are_You_Sure_For_Delete') . ' ØŸ",                                            icon: "warning",                                            showCancelButton: true,                                            confirmButtonClass: "btn-danger",                                            confirmButtonText: "' . translate('Delete') . '",                                            cancelButtonText: "' . translate('Cancel') . '",                                             }).then((result) => {                                             if (result.isConfirmed) {                                                Swal.fire("' . translate('Deleted') . '!", "", "success");                                                 window.location="' . base_url() . 'News/delete/' . $item->id . '";                                            }});\' class="btn btn-danger btn-sm">                                            <i class="fa fa-trash"> </i></a>                                                                    </div>            ';            $data[] = $row;        }        $output = array(            "draw" => @$_POST['draw'],            "recordsTotal" => $this->News_m->count_all(),            "recordsFiltered" => $this->News_m->count_filtered(),            "data" => $data,        );        // output to json format        echo json_encode($output);    }    public function get_load_details()    {        $id = $this->input->post('id');        //$data['all_details'] = $this->News_m->get_load_details($id)[0];        $data['all_details'] = $this->News_m->get($id)->row();        $data['images'] = $this->News_m->get_images($id);        $this->load->view('news_v/load_details_page', $data);    }    /****************************************************************/    public function thumb($data, $folder_name)    {        $config['image_library'] = 'gd2';        $config['source_image'] = $data['full_path'];        $config['new_image'] = 'uploads/' . $folder_name . '/thumbs/' . $data['file_name'];        $config['create_thumb'] = TRUE;        $config['maintain_ratio'] = TRUE;        $config['thumb_marker'] = '';        $config['width'] = 350;        $config['height'] = 200;        $this->load->library('image_lib', $config);        $this->image_lib->initialize($config);        $this->image_lib->resize();    }    private function upload_image($file_name, $folder_name)    {        $config['upload_path'] = 'uploads/' . $folder_name;        $config['allowed_types'] = 'gif|Gif|ico|ICO|jpg|JPG|jpeg|JPEG|BNG|png|PNG|bmp|BMP|WMV|wmv|MP3|mp3|FLV|flv|SWF|swf';        $config['max_size'] = '100024*8';        $config['encrypt_name'] = true;        $this->load->library('upload', $config);        $this->upload->initialize($config);        if (!$this->upload->do_upload($file_name)) {            return false;        } else {            $datafile = $this->upload->data();            $this->thumb($datafile, $folder_name);//            echo '<br>'. $datafile['file_name'];            return $datafile['file_name'];        }    }    public function add() /* News/add*/    {        $this->load->helper(array('form', 'url'));        $this->load->library(array('form_validation'));        $this->form_validation->set_rules('name_ar', translate('name') .' ' . translate('arabic'), 'required');        $this->form_validation->set_rules('name_en', translate('name') .' '. translate('english'), 'required');//        $this->form_validation->set_rules('name_ru', translate('name') .' ' . translate('russian'), 'required');        $this->form_validation->set_rules('description_ar', translate('description') .' '. translate('arabic'), 'required');        $this->form_validation->set_rules('description_en', translate('description').' ' . translate('english'), 'required');//        $this->form_validation->set_rules('description_ru', translate('description') .' '. translate('russian'), 'required');        if (empty($_FILES['image']['name'])) {            $this->form_validation->set_rules('image', translate('main_image'), 'required');        }        if ($this->form_validation->run() == FALSE) {            $project = new stdClass();            $project->id = null;            $project->description = null;            $project->image = null;            $data = array(                'page' => 'add',                'project' => $project,            );            $this->template->load('template', 'news_v/form', $data);        } else {            $post = $this->input->post(null, TRUE);            if (isset($_POST['add'])) {                $image = $this->upload_image("image", 'news');                $images = upload_muli_image("images", 'news');                $this->News_m->add($post, $image, $images);                if ($this->db->affected_rows() > 0) {                    $this->session->set_flashdata('success', translate('Messages_success'));                }                redirect('News', 'refresh');            }        }    }    public function edit($id)    {        $this->load->helper(array('form', 'url'));        $this->load->library('form_validation');        $this->form_validation->set_rules('name_ar', translate('name').' ' . translate('arabic'), 'required');        $this->form_validation->set_rules('name_en', translate('name') .' '. translate('english'), 'required');//        $this->form_validation->set_rules('name_ru', translate('name') .' '. translate('russian'), 'required');        $this->form_validation->set_rules('description_ar', translate('description') .' '. translate('arabic'), 'required');        $this->form_validation->set_rules('description_en', translate('description').' ' . translate('english'), 'required');//        $this->form_validation->set_rules('description_ru', translate('description') .' '. translate('russian'), 'required');        if ($this->form_validation->run() == FALSE) {            $query = $this->News_m->get($id);            $images = $this->News_m->get_images($id);            if ($query->num_rows() > 0) {                $project = $query->row();                $data = array(                    'page' => 'edit',                    'project' => $project,                    'images' => $images,                );                $this->template->load('template', 'news_v/edit', $data);            } else {                redirect('News', 'refresh');            }        } else {            $post = $this->input->post(null, TRUE);            if (isset($_POST['add'])) {                /*   echo '<pre>';                   print_r($_POST);                   echo '<br>';                   print_r($_FILES);*/                $image = $this->upload_image("image", 'news');                $images = upload_muli_image("images", 'news');                /* echo '<br>';                 print_r($images);*/                $this->News_m->edit($post, $image, $images);            }            if ($this->db->affected_rows() > 0) {                $this->session->set_flashdata('success', translate('Messages_success'));            } else {                $this->session->set_flashdata('danger', translate('Messages_danger'));            }            redirect('News', 'refresh');        }    }    public function delete($id)    {        $this->News_m->delete($id);        if ($this->db->affected_rows() > 0) {            $this->session->set_flashdata('success', translate('Deleted_Successfully'));        }        redirect('News', 'refresh');    }    function comments($blog_id)    {        $blog_id = base64_decode($blog_id);        $data['title'] = translate('comments');        $data['comments'] = get_by('blog_comment', array('blog_id' => $blog_id));        $this->template->load('template', 'news_v/comments', $data);    }    function delete_comment($id, $blog_id)    {        $blog_id = base64_decode($blog_id);        $this->News_m->delete_comment('blog_comment', array('id' => $id));        if ($this->db->affected_rows() > 0) {            $this->session->set_flashdata('success', translate('Messages_success'));        } else {            $this->session->set_flashdata('danger', translate('Messages_danger'));        }        redirect('News/comments/' . base64_encode($blog_id), 'refresh');    }    function delete_image()    {        $id = $this->input->get('id');        $this->News_m->delete_upload($id);    }}